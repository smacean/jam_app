// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

model Schedule {
  id                   String                 @id @default(cuid())
  name                 String
  startAt              DateTime
  endAt                DateTime
  gatherAt             DateTime?
  gatherPlace          String?
  event                Event?                 @relation(fields: [eventId], references: [id])
  eventId              String?
  reminder             Reminder[] //1対多
  schedule_scheduleTag Schedule_ScheduleTag[] //多対多
  link                 Link[] //1対多
  schedule_image       Schedule_Image[] //多対多
  schedule_user        Schedule_User[] //多対多
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model Event {
  id          String     @id @default(cuid())
  name        String
  description String?
  start_at    DateTime
  end_at      DateTime
  schedule    Schedule[]
  eventTag    EventTag[] //1対多
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Reminder {
  id         String   @id @default(cuid())
  message    String
  remind_at  DateTime
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Schedule_ScheduleTag {
  scheduleId    String
  scheduleTagId String
  schedule      Schedule    @relation(fields: [scheduleId], references: [id])
  scheduleTag   ScheduleTag @relation(fields: [scheduleTagId], references: [id])

  @@id([scheduleId, scheduleTagId])
}

model ScheduleTag {
  id                   String                 @id @default(cuid())
  name                 String
  schedule_scheduleTag Schedule_ScheduleTag[]
  tagGroup             TagGroup               @relation(fields: [tagGroupId], references: [id])
  tagGroupId           String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model EventTag {
  id         String   @id @default(cuid())
  name       String
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    String
  tagGroup   TagGroup @relation(fields: [tagGroupId], references: [id])
  tagGroupId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model TagGroup {
  id           String        @id @default(cuid())
  name         String
  scheduleTags ScheduleTag[]
  eventTags    EventTag[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Link {
  id         String   @id @default(cuid())
  url        String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Schedule_Image {
  scheduleId String
  imageId    String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  image      Image    @relation(fields: [imageId], references: [id])

  @@id([scheduleId, imageId])
}

model Image {
  id             String           @id @default(cuid())
  url            String
  schedule_image Schedule_Image[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Schedule_User {
  scheduleId String
  userId     String
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([scheduleId, userId])
}

model User {
  id            String          @id @default(cuid())
  name          String
  email         String          @unique
  password      String
  schedule_user Schedule_User[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}
